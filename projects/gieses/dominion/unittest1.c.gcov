        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include <string.h>
        -:    4:#include <stdio.h>
        -:    5:#include <assert.h>
        -:    6:#include "rngs.h"
        -:    7:
        -:    8:#define NOISY_TEST 0
        -:    9:
        -:   10://test getCost function
function main called 1 returned 100% blocks executed 69%
        1:   11:int main(){
        -:   12:	int i, card;
        1:   13:	printf("Testing getCost() function:\n");
call    0 returned 100%
        -:   14:	
        -:   15:	//check ranges to include numbers outside of our range, and our range
       32:   16:	for (i = -1; i < 30; i++){
branch  0 taken 97%
branch  1 taken 3% (fallthrough)
       31:   17:		card = getCost(i);
call    0 returned 100%
       31:   18:		if (i == -1){ //under range
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   19:			assert(card == -1);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   20:			#if (NOISY_TEST == 1)
        -:   21:			printf("Passed!\n");
        -:   22:			#endif
        -:   23:		}
       31:   24:		if (i == 0){ //curse
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   25:			assert(card == 0);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   26:			#if (NOISY_TEST == 1)
        -:   27:			printf("Passed!\n");
        -:   28:			#endif
        -:   29:		}
       31:   30:		if (i == 1){ //estate
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   31:			assert(card == 2);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   32:			#if (NOISY_TEST == 1)
        -:   33:			printf("Passed!\n");
        -:   34:			#endif
        -:   35:		}
       31:   36:		if (i == 2){ //duchy
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   37:			assert(card == 5);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   38:			#if (NOISY_TEST == 1)
        -:   39:			printf("Passed!\n");
        -:   40:			#endif
        -:   41:		}
       31:   42:		if (i == 3){ //province
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   43:			assert(card == 8);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   44:			#if (NOISY_TEST == 1)
        -:   45:			printf("Passed!\n");
        -:   46:			#endif
        -:   47:		}
       31:   48:		if (i == 4){ //copper
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   49:			assert(card == 0);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   50:			#if (NOISY_TEST == 1)
        -:   51:			printf("Passed!\n");
        -:   52:			#endif
        -:   53:		}
       31:   54:		if (i == 5){ //silver
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   55:			assert(card == 3);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   56:			#if (NOISY_TEST == 1)
        -:   57:			printf("Passed!\n");
        -:   58:			#endif
        -:   59:		}
       31:   60:		if (i == 6){ //gold
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   61:			assert(card == 6);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   62:			#if (NOISY_TEST == 1)
        -:   63:			printf("Passed!\n");
        -:   64:			#endif
        -:   65:		}
       31:   66:		if (i == 7){ //adventurer
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   67:			assert(card == 6);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   68:			#if (NOISY_TEST == 1)
        -:   69:			printf("Passed!\n");
        -:   70:			#endif
        -:   71:		}
       31:   72:		if (i == 8){ //council_room
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   73:			assert(card == 5);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   74:			#if (NOISY_TEST == 1)
        -:   75:			printf("Passed!\n");
        -:   76:			#endif
        -:   77:		}
       31:   78:		if (i == 9){ //feast
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   79:			assert(card == 4);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   80:			#if (NOISY_TEST == 1)
        -:   81:			printf("Passed!\n");
        -:   82:			#endif
        -:   83:		}
       31:   84:		if (i == 10){ //gardens
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   85:			assert(card == 4);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   86:			#if (NOISY_TEST == 1)
        -:   87:			printf("Passed!\n");
        -:   88:			#endif
        -:   89:		}
       31:   90:		if (i == 11){ //mine
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   91:			assert(card == 5);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   92:			#if (NOISY_TEST == 1)
        -:   93:			printf("Passed!\n");
        -:   94:			#endif
        -:   95:		}
       31:   96:		if (i == 12){ //remodel
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:   97:			assert(card == 4);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:   98:			#if (NOISY_TEST == 1)
        -:   99:			printf("Passed!\n");
        -:  100:			#endif
        -:  101:		}
       31:  102:		if (i == 13){ //smithy
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  103:			assert(card == 4);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  104:			#if (NOISY_TEST == 1)
        -:  105:			printf("Passed!\n");
        -:  106:			#endif
        -:  107:		}
       31:  108:		if (i == 14){ //village
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  109:			assert(card == 3);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  110:			#if (NOISY_TEST == 1)
        -:  111:			printf("Passed!\n");
        -:  112:			#endif
        -:  113:		}
       31:  114:		if (i == 15){ //baron
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  115:			assert(card == 4);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  116:			#if (NOISY_TEST == 1)
        -:  117:			printf("Passed!\n");
        -:  118:			#endif
        -:  119:		}
       31:  120:		if (i == 16){ //great_hall
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  121:			assert(card == 3);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  122:			#if (NOISY_TEST == 1)
        -:  123:			printf("Passed!\n");
        -:  124:			#endif
        -:  125:		}
       31:  126:		if (i == 17){ //minion
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  127:			assert(card == 5);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  128:			#if (NOISY_TEST == 1)
        -:  129:			printf("Passed!\n");
        -:  130:			#endif
        -:  131:		}
       31:  132:		if (i == 18){ //steward
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  133:			assert(card == 3);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  134:			#if (NOISY_TEST == 1)
        -:  135:			printf("Passed!\n");
        -:  136:			#endif
        -:  137:		}
       31:  138:		if (i == 19){ //tribute
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  139:			assert(card == 5);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  140:			#if (NOISY_TEST == 1)
        -:  141:			printf("Passed!\n");
        -:  142:			#endif
        -:  143:		}
       31:  144:		if (i == 20){ //ambassador
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  145:			assert(card == 3);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  146:			#if (NOISY_TEST == 1)
        -:  147:			printf("Passed!\n");
        -:  148:			#endif
        -:  149:		}
       31:  150:		if (i == 21){ //cutpurse
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  151:			assert(card == 4);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  152:			#if (NOISY_TEST == 1)
        -:  153:			printf("Passed!\n");
        -:  154:			#endif
        -:  155:		}
       31:  156:		if (i == 22){ //embargo
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  157:			assert(card == 2);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  158:			#if (NOISY_TEST == 1)
        -:  159:			printf("Passed!\n");
        -:  160:			#endif
        -:  161:		}
       31:  162:		if (i == 23){ //outpost
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  163:			assert(card == 5);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  164:			#if (NOISY_TEST == 1)
        -:  165:			printf("Passed!\n");
        -:  166:			#endif
        -:  167:		}
       31:  168:		if (i == 24){ //salvager
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  169:			assert(card == 4);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  170:			#if (NOISY_TEST == 1)
        -:  171:			printf("Passed!\n");
        -:  172:			#endif
        -:  173:		}
       31:  174:		if (i == 25){ //sea_hag
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  175:			assert(card == 4);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  176:			#if (NOISY_TEST == 1)
        -:  177:			printf("Passed!\n");
        -:  178:			#endif
        -:  179:		}
       31:  180:		if (i == 26){ //treasure_map
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  181:			assert(card == 4);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  182:			#if (NOISY_TEST == 1)
        -:  183:			printf("Passed!\n");
        -:  184:			#endif
        -:  185:		}
       31:  186:		if (i == 27){ //over range
branch  0 taken 3% (fallthrough)
branch  1 taken 97%
        1:  187:			assert(card == -1);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  188:			#if (NOISY_TEST == 1)
        -:  189:			printf("Passed!\n");
        -:  190:			#endif
        -:  191:		}
        -:  192:	}
        -:  193:	//check outliers
        1:  194:	card = getCost(-1000);
call    0 returned 100%
        1:  195:	assert(card == -1);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  196:	#if (NOISY_TEST == 1)
        -:  197:	printf("Passed!\n");
        -:  198:	#endif
        1:  199:	card = getCost(1000);
call    0 returned 100%
        1:  200:	assert(card == -1);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  201:	#if (NOISY_TEST == 1)
        -:  202:	printf("Passed!\n");
        -:  203:	#endif
        1:  204:	card = getCost(-10000);
call    0 returned 100%
        1:  205:	assert(card == -1);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  206:	#if (NOISY_TEST == 1)
        -:  207:	printf("Passed!\n");
        -:  208:	#endif
        1:  209:	card = getCost(10000);
call    0 returned 100%
        1:  210:	assert(card == -1);
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 never executed
        -:  211:	#if (NOISY_TEST == 1)
        -:  212:	printf("Passed!\n");
        -:  213:	#endif
        -:  214:	
        1:  215:	printf("All tests passed!\n");
call    0 returned 100%
        -:  216:	
        1:  217:	return 0;
        -:  218:}