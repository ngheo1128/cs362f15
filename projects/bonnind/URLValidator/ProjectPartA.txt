Daniel Bonnin
Victor Hernandez
Billy Kerns

CS362 Project Part: A

Q1. Explain testIsValid Function of UrlValidator test code.

	The testIsValid() function of URLValidator tests permutations of URL 
	components with known correctness/incorrectness.  

	The components tested are stored in the arrays testUrlScheme, 
	testUrlAuthority, testUrlPort, testPath, and testUrlQuery as strings 
	along with a boolean variable indicating if the component is valid or 
	invalid. These individual URL components are formed into complete URLs 
	(scheme, authority, port, path, query) by testIsValid() looping through 
	the arrays. The complete URLs are then passed to the 
	URLValidator.isValid() method. If all the components in the URL are 
	valid, then isValid() returns true. 


Q2. Give how many total number of urls it is testing. 

	31920

Q3. Explain how it is building all the urls. 

	The urls are built by taking different ResultPair objects which contain 
	strings that can be a valid or invalid part of a url.  Paired with each 
	of these strings is a boolean value indicating whether the string is 
	valid or invalid.  For example in ResultPair testUrlScheme we have 
	"3ht://", false since "3ht://" is not a vaild part of a url.

Q4. Give an example of valid url being tested and an invalid url being tested 
    by testIsValid() method.  

	Valid:  http://255.com:0/test1/?action=view
	Invalid:  3ht://www.google.com:65636/../


Q5. Do you think that a real world test is very different than the unit tests 
    and card tests that we wrote (in terms of concepts & complexity)? 
    Explain in few lines. 

	A key difference between the student-written tests and URLValidatorTest 
	is that URLValidatorTest is more complex, testing over a relatively 
	large set of test data. However, the same concepts were used in both 
	our student tests and URLValidator, namely, domain partitioning and 
	combinatorial coverage.   