        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdlib.h>
        -:    2:#include <stdio.h>
        -:    3:#include "dominion.h"
        -:    4:#include "dominion_helpers.h"
        -:    5:
function main called 1 returned 100% blocks executed 86%
        1:    6:int main(int argc, char *argv[]){
        1:    7:    int i = 0;
        1:    8:    printf("unittest4.c\n");
call    0 returned 100%
        -:    9:    struct gameState state;
        -:   10:    
        -:   11:    /*Initialize supplyCount to 1 for every card.*/
       28:   12:    for (i = 0; i <= treasure_map; i++) {
branch  0 taken 96%
branch  1 taken 4% (fallthrough)
       27:   13:        state.supplyCount[i] = 1;
        -:   14:    }
        -:   15:
        1:   16:    printf("isGameOver(): %s 1 of every card\n", 
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
        1:   17:        (!isGameOver(&state)) ? "PASS" : "FAIL" );
call    0 returned 100%
        -:   18:    
        1:   19:    state.supplyCount[province] = 0;
        -:   20:    
        1:   21:    printf("isGameOver(): %s province is empty\n", 
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
        1:   22:        (isGameOver(&state)) ? "PASS" : "FAIL" );    
call    0 returned 100%
        -:   23:    
        1:   24:    state.supplyCount[province] = 1;
        1:   25:    state.supplyCount[curse] = 0;
        1:   26:    printf("isGameOver(): %s 1 card is empty\n", 
call    0 returned 100%
        1:   27:        (!isGameOver(&state)) ? "PASS" : "PASS" );
call    0 returned 100%
        -:   28:
        1:   29:    state.supplyCount[minion] = 0;
        1:   30:    printf("isGameOver(): %s 2 cards are empty\n", 
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
        1:   31:        (!isGameOver(&state)) ? "PASS" : "FAIL" );
call    0 returned 100%
        -:   32:
        1:   33:    state.supplyCount[treasure_map] = 0;
        1:   34:    printf("isGameOver(): %s 3 cards are empty\n", 
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
call    2 returned 100%
        1:   35:        (isGameOver(&state)) ? "PASS" : "FAIL" );
call    0 returned 100%
        -:   36:
        1:   37:    return 0;
        -:   38:}
