        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/********************************************************
        -:    2:*	Name: 	Robert Tang
        -:    3:*	Class:	CS 362
        -:    4:*	File:	unittest1.c
        -:    5:*
        -:    6:*	Description: 
        -:    7:*		Test for card cost
        -:    8:********************************************************/
        -:    9:
        -:   10:#include "dominion.h"
        -:   11:#include "dominion_helpers.h"
        -:   12:#include <stdio.h>
        -:   13:#include <stdlib.h>
        -:   14:
       27:   15:void testCardCost (int cardNumber)
        -:   16:{	
        -:   17:	// create information parts
        -:   18:	char* testCardName;
        -:   19:	int	testCardValue;
        -:   20:	
        -:   21:	//	set values 
       27:   22:	switch( cardNumber )
        -:   23:    {
        -:   24:		case 0:
        1:   25:			testCardName = "curse";
        1:   26:			testCardValue = 0;
        1:   27:			break;
        -:   28:		case 1:
        1:   29:			testCardName = "estate";
        1:   30:			testCardValue = 2;
        1:   31:			break;
        -:   32:		case 2:
        1:   33:			testCardName = "duchy";
        1:   34:			testCardValue =  5;
        1:   35:			break;
        -:   36:		case 3:
        1:   37:			testCardName = "province";
        1:   38:			testCardValue =  8;
        1:   39:			break;
        -:   40:		case 4:
        1:   41:			testCardName = "copper";
        1:   42:			testCardValue =  0;
        1:   43:			break;
        -:   44:		case 5:
        1:   45:			testCardName = "silver";
        1:   46:			testCardValue =  3;
        1:   47:			break;
        -:   48:		case 6:
        1:   49:			testCardName = "gold";
        1:   50:			testCardValue =  6;
        1:   51:			break;
        -:   52:		case 7:
        1:   53:			testCardName = "adventurer";
        1:   54:			testCardValue =  6;
        1:   55:			break;
        -:   56:		case 8:
        1:   57:			testCardName = "council_room";
        1:   58:			testCardValue =  5;
        1:   59:			break;
        -:   60:		case 9:
        1:   61:			testCardName = "feast";
        1:   62:			testCardValue =  4;
        -:   63:			
        -:   64:		case 10:
        2:   65:			testCardName = "gardens";
        2:   66:			testCardValue =  4;
        2:   67:			break;
        -:   68:		case 11:
        1:   69:			testCardName = "mine";
        1:   70:			testCardValue =  5;
        1:   71:			break;
        -:   72:		case 12:
        1:   73:			testCardName = "remodel";
        1:   74:			testCardValue =  4;
        1:   75:			break;
        -:   76:		case 13:
        1:   77:			testCardName = "smithy";
        1:   78:			testCardValue =  4;
        1:   79:			break;
        -:   80:		case 14:
        1:   81:			testCardName = "village";
        1:   82:			testCardValue =  3;
        1:   83:			break;
        -:   84:		case 15:
        1:   85:			testCardName = "baron";
        1:   86:			testCardValue =  4;
        1:   87:			break;
        -:   88:		case 16:
        1:   89:			testCardName = "great_hall";
        1:   90:			testCardValue =  3;
        1:   91:			break;
        -:   92:		case 17:
        1:   93:			testCardName = "minion";
        1:   94:			testCardValue =  5;
        1:   95:			break;
        -:   96:		case 18:
        1:   97:			testCardName = "steward";
        1:   98:			testCardValue =  3;
        1:   99:			break;
        -:  100:		case 19:
        1:  101:			testCardName = "tribute";
        1:  102:			testCardValue =  5;
        1:  103:			break;
        -:  104:			
        -:  105:		case 20:
        1:  106:			testCardName = "ambassador";
        1:  107:			testCardValue =  3;
        1:  108:			break;
        -:  109:		case 21:
        1:  110:			testCardName = "cutpurse";
        1:  111:			testCardValue =  4;
        1:  112:			break;
        -:  113:		case 22:
        1:  114:			testCardName = "embargo";
        1:  115:			testCardValue =  2;
        1:  116:			break;
        -:  117:		case 23:
        1:  118:			testCardName = "outpost";
        1:  119:			testCardValue =  5;
        1:  120:			break;
        -:  121:		case 24:
        1:  122:			testCardName = "salvager";
        1:  123:			testCardValue =  4;
        1:  124:			break;
        -:  125:		case 25:
        1:  126:			testCardName = "sea_hag";
        1:  127:			testCardValue =  4;
        1:  128:			break;
        -:  129:		case 26:
        1:  130:			testCardName = "treasure_map";
        1:  131:			testCardValue =  4;
        -:  132:			break;
        -:  133:		
        -:  134:    }	
        -:  135:
       27:  136:	printf("Card Number : %d \tCard Name : %s \n", cardNumber, testCardName);
       27:  137:	printf("Card Cost : %d \t", testCardValue);
        -:  138:	// check values
       27:  139:	if (testCardValue == getCost(cardNumber))
       27:  140:		printf("checked \n");
        -:  141:	else
    #####:  142:		printf("error: Wrong Cost\n");
        -:  143:		
       27:  144:}
        -:  145:
        1:  146:void cardCostTest()
        -:  147:{
        1:  148:	printf("Testing for 27 card cost values\n");
        1:  149:	printf("-------------------------------\n");
        -:  150:
        -:  151:	int index;
       28:  152:	for (index = 0; index < 27; index++)
       27:  153:		testCardCost(index);
        1:  154:}
        -:  155:
        1:  156:int main()
        -:  157:{
        1:  158:	cardCostTest();
        1:  159:	return 0;
        -:  160:}
